<UserControl x:Class="WoWDatabaseEditorCore.Avalonia.Views.StatusBarView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             x:DataType="viewModels:StatusBarViewModel"
             xmlns:converters="clr-namespace:WDE.Common.Avalonia.Converters;assembly=WDE.Common.Avalonia"
             xmlns:managers="clr-namespace:WoWDatabaseEditorCore.Managers;assembly=WoWDatabaseEditorCore"
             xmlns:classic="clr-clr-namespace:Classic.CommonControls;Classic.CommonControls"
             xmlns:managers1="clr-namespace:WDE.Common.Managers;assembly=WDE.Common"
             xmlns:viewModels="clr-namespace:WoWDatabaseEditorCore.ViewModels;assembly=WoWDatabaseEditorCore"
             xmlns:commonControls="clr-namespace:Classic.CommonControls;assembly=Classic.CommonControls.Avalonia"
             xmlns:views="clr-namespace:WoWDatabaseEditorCore.Avalonia.Views"
             xmlns:utils="clr-namespace:WDE.Common.Avalonia.Utils;assembly=WDE.Common.Avalonia">
    <UserControl.Resources>
        <converters:NullConverter Inverted="True" x:Key="NullConverter" />
        
        <DrawingImage x:Key="Problems">
            <GeometryDrawing  Brush="White" Geometry="F1M235,-171L235,-128 277,-128 277,-171 235,-171z M235,-299L235,-213 277,-213 277,-299 235,-299z M256,-469L491,-64 21.0000038146973,-64 256,-469z"   />
        </DrawingImage>
        <DrawingImage x:Key="NoProblems">
            <GeometryDrawing  Brush="White" Geometry="F1M418,-393L448,-363 192,-107 73,-226 102,-256 192,-166 418,-393z"   />
        </DrawingImage>
    </UserControl.Resources>
    <commonControls:StatusBar VerticalAlignment="Stretch" Height="24">
        <!-- <StackPanel Orientation="Horizontal"> -->
        <commonControls:StatusBarItem>
            <Button BorderThickness="0"
                    Background="Transparent"
                    ToolTip.Tip="Copy the next creature guid" Command="{CompiledBinding CopyNextCreatureGuidCommand}">
                <WdeImage ImageUri="Icons/icon_npc_mono.png" Width="16" Height="16" />
                <Button.ContextFlyout>
                    <Flyout>
                        <StackPanel Orientation="Vertical" Spacing="5">
                            <TextBlock>How many guids do you want to reserve?</TextBlock>
                            <TextBox Text="{CompiledBinding CreatureGuidCount}" />
                            <Button Click="HideFlyout" Command="{CompiledBinding CopyCreatureGuidRangeCommand}" Background="#20000000" Foreground="{DynamicResource ButtonForeground}" Content="Copy first" />
                            <StackPanel.KeyBindings>
                                <KeyBinding Gesture="Enter" Command="{CompiledBinding CopyCreatureGuidRangeCommand}" />
                            </StackPanel.KeyBindings>
                        </StackPanel>
                    </Flyout>
                </Button.ContextFlyout>
            </Button>
        </commonControls:StatusBarItem>
        <commonControls:StatusBarItem>
            <Button BorderThickness="0"
                    Background="Transparent"
                    ToolTip.Tip="Copy the next gameobject guid" Command="{CompiledBinding CopyNextGameobjectGuidCommand}">
                <WdeImage ImageUri="Icons/icon_chest_mono.png" Width="16" Height="16" />
                <Button.ContextFlyout>
                    <Flyout>
                        <StackPanel Orientation="Vertical" Spacing="5">
                            <TextBlock>How many guids do you want to reserve?</TextBlock>
                            <TextBox Text="{CompiledBinding GameobjectGuidCount}" />
                            <Button Click="HideFlyout" Command="{CompiledBinding CopyGameobjectGuidRangeCommand}" Background="#20000000" Foreground="{DynamicResource ButtonForeground}" Content="Copy first" />
                            <StackPanel.KeyBindings>
                                <KeyBinding Gesture="Enter" Command="{CompiledBinding CopyGameobjectGuidRangeCommand}" />
                            </StackPanel.KeyBindings>

                        </StackPanel>
                    </Flyout>
                </Button.ContextFlyout>
            </Button>
        </commonControls:StatusBarItem>
            <!-- <Border Margin="5,0" Width="1" Height="10" Background="White" Opacity="0.5" /> -->
        <!-- </StackPanel> -->
        
        <commonControls:StatusBarItem commonControls:StatusBar.Size="*" Grid.Column="1">
            <Button
                HorizontalContentAlignment="Left"
                BorderThickness="0"
                Background="Transparent"
                Opacity="1" Command="{CompiledBinding CurrentNotification.ClickCommand, FallbackValue={x:Null}}"
                IsEnabled="{CompiledBinding CurrentNotification.ClickCommand, Converter={StaticResource NullConverter}, FallbackValue=False}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" ClipToBounds="True">
                    <Image Margin="0,3,5,3">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{CompiledBinding CurrentNotification.Type}" ComparisonCondition="Equal" Value="{x:Static managers1:NotificationType.Error}">
                                <ChangePropertyAction TargetObject="{Binding #Image}" PropertyName="Source" Value="{DynamicResource StatusBarIconError}"/>
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding CurrentNotification.Type}" ComparisonCondition="Equal" Value="{x:Static managers1:NotificationType.Warning}">
                                <ChangePropertyAction TargetObject="{Binding #Image}" PropertyName="Source" Value="{DynamicResource StatusBarIconWarning}"/>
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding CurrentNotification.Type}" ComparisonCondition="Equal" Value="{x:Static managers1:NotificationType.Info}">
                                <ChangePropertyAction TargetObject="{Binding #Image}" PropertyName="Source" Value="{DynamicResource StatusBarIconNotice}"/>
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding CurrentNotification.Type}" ComparisonCondition="Equal" Value="{x:Static managers1:NotificationType.Success}">
                                <ChangePropertyAction TargetObject="{Binding #Image}" PropertyName="Source" Value="{DynamicResource StatusBarIconSuccess}"/>
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Image>
                    <TextBlock HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis"
                               ClipToBounds="True"
                               VerticalAlignment="Center" Text="{CompiledBinding CurrentNotification.Message}" />
                </StackPanel>
            </Button>
        </commonControls:StatusBarItem>
        
        <commonControls:StatusBarItem VerticalAlignment="Stretch" DataContext="{CompiledBinding ServerExecutableService}">
            <Button BorderThickness="0" Background="Transparent" Command="{CompiledBinding ToggleWorldServer}">
                <StackPanel Orientation="Horizontal" Spacing="3">
                    <WdeImage Width="13" Height="13" VerticalAlignment="Center">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{CompiledBinding IsWorldServerRunning}" ComparisonCondition="Equal" Value="True">
                                <ChangePropertyAction TargetObject="{Binding #WdeImage}"
                                                      PropertyName="ImageUri"
                                                      Value="Icons/icon_pause_mono.png" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding IsWorldServerRunning}" ComparisonCondition="NotEqual" Value="True">
                                <ChangePropertyAction TargetObject="{Binding #WdeImage}"
                                                      PropertyName="ImageUri"
                                                      Value="Icons/icon_play_mono.png" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </WdeImage>
                    <TextBlock>World server</TextBlock>
                </StackPanel>
            </Button>
        </commonControls:StatusBarItem>
        
        <commonControls:StatusBarItem Grid.Column="3" VerticalAlignment="Stretch" DataContext="{CompiledBinding ServerExecutableService}">
            <Button BorderThickness="0" Background="Transparent" Command="{CompiledBinding ToggleAuthServer}">
                <StackPanel Orientation="Horizontal" Spacing="3">
                    <WdeImage Width="13" Height="13" Margin="0,0,3,0" VerticalAlignment="Center">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{CompiledBinding IsAuthServerRunning}" ComparisonCondition="Equal" Value="True">
                                <ChangePropertyAction TargetObject="{Binding #WdeImage}"
                                                      PropertyName="ImageUri"
                                                      Value="Icons/icon_pause_mono.png" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding IsAuthServerRunning}" ComparisonCondition="NotEqual" Value="True">
                                <ChangePropertyAction TargetObject="{Binding #WdeImage}"
                                                      PropertyName="ImageUri"
                                                      Value="Icons/icon_play_mono.png" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </WdeImage>
                    <TextBlock>Auth server</TextBlock>
                </StackPanel>
            </Button>
        </commonControls:StatusBarItem>

        <commonControls:StatusBarItem IsVisible="{CompiledBinding SupportsBreakpoints}" Grid.Column="4" VerticalAlignment="Stretch" ToolTip.Tip="View Breakpoints (Ctrl + B)">
            <Button BorderThickness="0" Background="Transparent" Command="{CompiledBinding OpenBreakpointsWindow}">
                <StackPanel Orientation="Horizontal" Spacing="3">
                    <WdeImage ImageUri="Icons/icon_breakpoint_mono_all.png" Width="13" Height="13" />
                    <TextBlock Text="{CompiledBinding TotalBreakpoints}" />
                    <TextBlock Text=" Breakpoints" />
                </StackPanel>
            </Button>
        </commonControls:StatusBarItem>

        <commonControls:StatusBarItem Grid.Column="5" VerticalAlignment="Stretch">
            <Button BorderThickness="0" Background="Transparent" Command="{CompiledBinding OpenProblemTool}">
                <StackPanel Orientation="Horizontal" Spacing="3">
                    <Image Width="13" Height="13" VerticalAlignment="Center">
                        <Interaction.Behaviors>
                            <DataTriggerBehavior Binding="{CompiledBinding TotalProblems}" ComparisonCondition="Equal" Value="0">
                                <ChangePropertyAction TargetObject="{Binding #Image}"
                                                      PropertyName="Source"
                                                      Value="{StaticResource NoProblems}" />
                            </DataTriggerBehavior>
                            <DataTriggerBehavior Binding="{CompiledBinding TotalProblems}" ComparisonCondition="NotEqual" Value="0">
                                <ChangePropertyAction TargetObject="{Binding #Image}"
                                                      PropertyName="Source"
                                                      Value="{StaticResource Problems}" />
                            </DataTriggerBehavior>
                        </Interaction.Behaviors>
                    </Image>
                    <TextBlock Text="{CompiledBinding TotalProblems, Mode=OneWay}" IsHitTestVisible="False" />
                    <TextBlock Text=" problems found"></TextBlock>
                </StackPanel>
            </Button>
        </commonControls:StatusBarItem>
        
        <commonControls:StatusBarItem Grid.Column="6" VerticalAlignment="Stretch" >
            <Button BorderThickness="0" Background="Transparent">
                <TextBlock Text="{CompiledBinding Connections.OpenedConnections, StringFormat={}{0} connections, Mode=OneWay}" IsHitTestVisible="False" />
                <Button.Flyout>
                    <Flyout FlyoutPresenterClasses="no-horiz-scroll" Placement="TopEdgeAlignedRight" PlacementGravity="Top" PlacementConstraintAdjustment="None">
                        <Panel DataContext="{CompiledBinding Connections}" MinWidth="200" MinHeight="200">
                            <ContentControl Content="{CompiledBinding .}"
                                            ContentTemplate="{x:Static utils:ViewDataTemplate.Template}" />
                        </Panel>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </commonControls:StatusBarItem>
        
        <commonControls:StatusBarItem Grid.Column="7" VerticalAlignment="Stretch">
            <Button BorderThickness="0" Background="Transparent">
                <TextBlock Text="{CompiledBinding TasksViewModel.PendingTasksCount, StringFormat={}{0} tasks running in background, Mode=OneWay}" IsHitTestVisible="False" />
                <Button.Flyout>
                    <Flyout FlyoutPresenterClasses="no-horiz-scroll" Placement="TopEdgeAlignedRight" PlacementGravity="Top" PlacementConstraintAdjustment="None">
                        <views:TasksPanel DataContext="{CompiledBinding TasksViewModel}"
                                          MinWidth="200" MinHeight="200"/>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </commonControls:StatusBarItem>
    </commonControls:StatusBar>
</UserControl>
